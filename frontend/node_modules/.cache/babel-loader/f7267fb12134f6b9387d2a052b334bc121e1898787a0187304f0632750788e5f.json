{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{authAPI,handleAPIError}from'../utils/api';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext({});export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// Check for existing auth on mount\nuseEffect(()=>{const checkAuthStatus=async()=>{try{const token=localStorage.getItem('authToken');const savedUser=localStorage.getItem('user');if(token&&savedUser){// Verify token is still valid\nconst response=await authAPI.me();setUser(response.data.user);}}catch(error){// Token invalid, clear local storage\nlocalStorage.removeItem('authToken');localStorage.removeItem('user');}finally{setLoading(false);}};checkAuthStatus();},[]);const login=async(email,password)=>{try{setError(null);setLoading(true);const response=await authAPI.login(email,password);const{user:userData,token}=response.data;// Save to localStorage\nlocalStorage.setItem('authToken',token);localStorage.setItem('user',JSON.stringify(userData));setUser(userData);return{success:true};}catch(error){const errorMessage=handleAPIError(error);setError(errorMessage);return{success:false,error:errorMessage};}finally{setLoading(false);}};const register=async(email,password)=>{try{setError(null);setLoading(true);const response=await authAPI.register(email,password);const{user:userData,token}=response.data;// Save to localStorage\nlocalStorage.setItem('authToken',token);localStorage.setItem('user',JSON.stringify(userData));setUser(userData);return{success:true};}catch(error){const errorMessage=handleAPIError(error);setError(errorMessage);return{success:false,error:errorMessage};}finally{setLoading(false);}};const logout=()=>{localStorage.removeItem('authToken');localStorage.removeItem('user');setUser(null);setError(null);};const updateTier=async newTier=>{try{const response=await authAPI.updateTier(newTier);const updatedUser={...user,tier:newTier};setUser(updatedUser);localStorage.setItem('user',JSON.stringify(updatedUser));return{success:true};}catch(error){const errorMessage=handleAPIError(error);setError(errorMessage);return{success:false,error:errorMessage};}};const value={user,loading,error,login,register,logout,updateTier,isAuthenticated:!!user};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","handleAPIError","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","error","setError","checkAuthStatus","token","localStorage","getItem","savedUser","response","me","data","removeItem","login","email","password","userData","setItem","JSON","stringify","success","errorMessage","register","logout","updateTier","newTier","updatedUser","tier","value","isAuthenticated","Provider"],"sources":["/home/jeffreyconboy/StatEdge/frontend/src/hooks/useAuth.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI, handleAPIError } from '../utils/api';\n\nconst AuthContext = createContext({});\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check for existing auth on mount\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      try {\n        const token = localStorage.getItem('authToken');\n        const savedUser = localStorage.getItem('user');\n        \n        if (token && savedUser) {\n          // Verify token is still valid\n          const response = await authAPI.me();\n          setUser(response.data.user);\n        }\n      } catch (error) {\n        // Token invalid, clear local storage\n        localStorage.removeItem('authToken');\n        localStorage.removeItem('user');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    checkAuthStatus();\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      setError(null);\n      setLoading(true);\n      \n      const response = await authAPI.login(email, password);\n      const { user: userData, token } = response.data;\n      \n      // Save to localStorage\n      localStorage.setItem('authToken', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      \n      setUser(userData);\n      return { success: true };\n    } catch (error) {\n      const errorMessage = handleAPIError(error);\n      setError(errorMessage);\n      return { success: false, error: errorMessage };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const register = async (email, password) => {\n    try {\n      setError(null);\n      setLoading(true);\n      \n      const response = await authAPI.register(email, password);\n      const { user: userData, token } = response.data;\n      \n      // Save to localStorage\n      localStorage.setItem('authToken', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      \n      setUser(userData);\n      return { success: true };\n    } catch (error) {\n      const errorMessage = handleAPIError(error);\n      setError(errorMessage);\n      return { success: false, error: errorMessage };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('user');\n    setUser(null);\n    setError(null);\n  };\n\n  const updateTier = async (newTier) => {\n    try {\n      const response = await authAPI.updateTier(newTier);\n      const updatedUser = { ...user, tier: newTier };\n      \n      setUser(updatedUser);\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      \n      return { success: true };\n    } catch (error) {\n      const errorMessage = handleAPIError(error);\n      setError(errorMessage);\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    updateTier,\n    isAuthenticated: !!user,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}