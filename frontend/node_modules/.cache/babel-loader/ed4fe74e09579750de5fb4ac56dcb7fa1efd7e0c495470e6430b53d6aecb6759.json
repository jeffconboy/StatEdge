{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API calls - Updated to match backend endpoints\nexport const authAPI = {\n  login: (email, password) => api.post('/api/auth/login', {\n    email,\n    password\n  }),\n  register: (email, password) => api.post('/api/auth/register', {\n    email,\n    password\n  }),\n  me: () => api.get('/api/auth/me'),\n  updateTier: tier => api.put('/api/auth/tier', {\n    tier\n  })\n};\n\n// Player API calls - Updated to match Python service endpoints\nconst pythonAPI = axios.create({\n  baseURL: 'http://localhost:18000',\n  timeout: 30000\n});\n\n// Add auth interceptor for Python API\npythonAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\nexport const playerAPI = {\n  search: (query, limit = 10) => pythonAPI.post('/api/players/search', {\n    query,\n    limit\n  }),\n  getStats: (playerId, options = {}) => pythonAPI.get(`/api/players/${playerId}/stats`, {\n    params: options\n  }),\n  getSummary: playerId => pythonAPI.get(`/api/players/${playerId}/summary`),\n  getTrending: (limit = 10) => pythonAPI.get(`/api/players/trending`, {\n    params: {\n      limit\n    }\n  }),\n  bulkStats: (playerIds, statTypes) => pythonAPI.post('/api/players/bulk-stats', {\n    player_ids: playerIds,\n    stat_types: statTypes\n  })\n};\n\n// Analytics API calls - Updated to match actual endpoints\nexport const analyticsAPI = {\n  getDatabaseStats: () => pythonAPI.get('/api/test/database-stats'),\n  getDataVerification: () => pythonAPI.get('/api/test/2025-data-verification'),\n  collectData: date => pythonAPI.post(`/api/test/collect-data${date ? `?date=${date}` : ''}`),\n  collectFangraphs: (season = 2025) => pythonAPI.post(`/api/test/collect-fangraphs?season=${season}`),\n  collectSeasonStatcast: (season = 2025) => pythonAPI.post(`/api/test/collect-season-statcast?season=${season}`)\n};\n\n// AI API calls\nexport const aiAPI = {\n  chat: (query, context = {}) => api.post('/api/ai/chat', {\n    query,\n    context\n  }),\n  analyzeProp: (playerName, propType, bettingLine, gameContext = {}) => api.post('/api/ai/analyze-prop', {\n    player_name: playerName,\n    prop_type: propType,\n    betting_line: bettingLine,\n    game_context: gameContext\n  }),\n  explainStats: (playerName, statistics) => api.post('/api/ai/explain-stats', {\n    player_name: playerName,\n    statistics\n  }),\n  getSuggestions: () => api.get('/api/ai/suggestions'),\n  batchAnalyze: queries => api.post('/api/ai/batch-analyze', {\n    queries\n  }),\n  getConversations: (limit = 20, offset = 0) => api.get('/api/ai/conversations', {\n    params: {\n      limit,\n      offset\n    }\n  }),\n  getUsageStats: () => api.get('/api/ai/usage-stats'),\n  health: () => api.get('/api/ai/health')\n};\n\n// Utility functions\nexport const handleAPIError = error => {\n  if (error.response) {\n    var _error$response$data, _error$response$data2;\n    // Server responded with error status\n    return ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || ((_error$response$data2 = error.response.data) === null || _error$response$data2 === void 0 ? void 0 : _error$response$data2.message) || 'Server error';\n  } else if (error.request) {\n    // Request was made but no response received\n    return 'Network error - please check your connection';\n  } else {\n    // Something else happened\n    return error.message || 'An unexpected error occurred';\n  }\n};\nexport const formatAPIResponse = response => {\n  return {\n    data: response.data,\n    cached: response.data.cached || false,\n    timestamp: new Date().toISOString()\n  };\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","email","password","post","register","me","get","updateTier","tier","put","pythonAPI","playerAPI","search","query","limit","getStats","playerId","options","params","getSummary","getTrending","bulkStats","playerIds","statTypes","player_ids","stat_types","analyticsAPI","getDatabaseStats","getDataVerification","collectData","date","collectFangraphs","season","collectSeasonStatcast","aiAPI","chat","context","analyzeProp","playerName","propType","bettingLine","gameContext","player_name","prop_type","betting_line","game_context","explainStats","statistics","getSuggestions","batchAnalyze","queries","getConversations","offset","getUsageStats","health","handleAPIError","_error$response$data","_error$response$data2","data","message","formatAPIResponse","cached","timestamp","Date","toISOString"],"sources":["/home/jeffreyconboy/StatEdge/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API calls - Updated to match backend endpoints\nexport const authAPI = {\n  login: (email, password) => api.post('/api/auth/login', { email, password }),\n  register: (email, password) => api.post('/api/auth/register', { email, password }),\n  me: () => api.get('/api/auth/me'),\n  updateTier: (tier) => api.put('/api/auth/tier', { tier }),\n};\n\n// Player API calls - Updated to match Python service endpoints\nconst pythonAPI = axios.create({\n  baseURL: 'http://localhost:18000',\n  timeout: 30000,\n});\n\n// Add auth interceptor for Python API\npythonAPI.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nexport const playerAPI = {\n  search: (query, limit = 10) => pythonAPI.post('/api/players/search', { query, limit }),\n  getStats: (playerId, options = {}) => pythonAPI.get(`/api/players/${playerId}/stats`, { params: options }),\n  getSummary: (playerId) => pythonAPI.get(`/api/players/${playerId}/summary`),\n  getTrending: (limit = 10) => pythonAPI.get(`/api/players/trending`, { params: { limit } }),\n  bulkStats: (playerIds, statTypes) => pythonAPI.post('/api/players/bulk-stats', { player_ids: playerIds, stat_types: statTypes }),\n};\n\n// Analytics API calls - Updated to match actual endpoints\nexport const analyticsAPI = {\n  getDatabaseStats: () => pythonAPI.get('/api/test/database-stats'),\n  getDataVerification: () => pythonAPI.get('/api/test/2025-data-verification'),\n  collectData: (date) => pythonAPI.post(`/api/test/collect-data${date ? `?date=${date}` : ''}`),\n  collectFangraphs: (season = 2025) => pythonAPI.post(`/api/test/collect-fangraphs?season=${season}`),\n  collectSeasonStatcast: (season = 2025) => pythonAPI.post(`/api/test/collect-season-statcast?season=${season}`),\n};\n\n// AI API calls\nexport const aiAPI = {\n  chat: (query, context = {}) => api.post('/api/ai/chat', { query, context }),\n  analyzeProp: (playerName, propType, bettingLine, gameContext = {}) =>\n    api.post('/api/ai/analyze-prop', { \n      player_name: playerName, \n      prop_type: propType, \n      betting_line: bettingLine, \n      game_context: gameContext \n    }),\n  explainStats: (playerName, statistics) =>\n    api.post('/api/ai/explain-stats', { player_name: playerName, statistics }),\n  getSuggestions: () => api.get('/api/ai/suggestions'),\n  batchAnalyze: (queries) => api.post('/api/ai/batch-analyze', { queries }),\n  getConversations: (limit = 20, offset = 0) =>\n    api.get('/api/ai/conversations', { params: { limit, offset } }),\n  getUsageStats: () => api.get('/api/ai/usage-stats'),\n  health: () => api.get('/api/ai/health'),\n};\n\n// Utility functions\nexport const handleAPIError = (error) => {\n  if (error.response) {\n    // Server responded with error status\n    return error.response.data?.error || error.response.data?.message || 'Server error';\n  } else if (error.request) {\n    // Request was made but no response received\n    return 'Network error - please check your connection';\n  } else {\n    // Something else happened\n    return error.message || 'An unexpected error occurred';\n  }\n};\n\nexport const formatAPIResponse = (response) => {\n  return {\n    data: response.data,\n    cached: response.data.cached || false,\n    timestamp: new Date().toISOString(),\n  };\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}